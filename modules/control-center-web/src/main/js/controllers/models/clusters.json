{
  "general": [
    {
      "label": "General",
      "group": "general",
      "fields": [
        {
          "label": "Name",
          "id": "clusterName",
          "type": "text",
          "model": "name",
          "required": true,
          "placeholder": "Input name"
        },
        {
          "label": "Caches",
          "id": "caches",
          "type": "dropdown-multiple",
          "model": "caches",
          "placeholder": "Choose caches",
          "placeholderEmpty": "No caches configured",
          "items": "caches",
          "tip": [
            "Select caches to start in cluster or add a new cache"
          ],
          "addLink": {
            "ref": "/configuration/caches?new"
          }
        },
        {
          "label": "Local host",
          "id": "localHost",
          "type": "text",
          "model": "localHost",
          "placeholder": "0.0.0.0",
          "tip": [
            "System-wide local address or host for all Ignite components to bind to"
          ]
        },
        {
          "label": "Discovery",
          "id": "discovery",
          "type": "dropdown-details",
          "settings": false,
          "path": "discovery",
          "model": "kind",
          "items": "discoveries",
          "tip": [
            "Discovery allows to discover remote nodes in grid"
          ],
          "details": {
            "Vm": {
              "fields": [
                {
                  "label": "Addresses",
                  "type": "table-simple",
                  "ui": "table-simple",
                  "path": "discovery.Vm",
                  "model": "addresses",
                  "reordering": true,
                  "ipaddress": true,
                  "placeholder": "IP address:port",
                  "focusId": "IpAddress",
                  "addTip": "Add new address.",
                  "removeTip": "Remove address",
                  "tableTip": [
                    "Addresses may be represented as follows:",
                    "<ul>",
                    "  <li>IP address (e.g. 127.0.0.1, 9.9.9.9, etc)</li>",
                    "  <li>IP address and port (e.g. 127.0.0.1:47500, 9.9.9.9:47501, etc)</li>",
                    "  <li>IP address and port range (e.g. 127.0.0.1:47500..47510, 9.9.9.9:47501..47504, etc)</li>",
                    "  <li>Hostname (e.g. host1.com, host2, etc)</li>",
                    "  <li>Hostname and port (e.g. host1.com:47500, host2:47502, etc)</li>",
                    "  <li>Hostname and port range (e.g. host1.com:47500..47510, host2:47502..47508, etc)</li>",
                    "</ul>",
                    "If port is 0 or not provided then default port will be used (depends on discovery SPI configuration)",
                    "If port range is provided (e.g. host:port1..port2) the following should be considered:",
                    "<ul>",
                    "  <li>port1 < port2 should be true</li>",
                    "  <li>Both port1 and port2 should be greater than 0</li>",
                    "</ul>"
                  ]
                }
              ]
            },
            "Multicast": {
              "fields": [
                {
                  "label": "IP address",
                  "type": "text",
                  "path": "discovery.Multicast",
                  "model": "multicastGroup",
                  "placeholder": "228.1.2.4",
                  "tip": [
                    "IP address of multicast group"
                  ]
                },
                {
                  "label": "Port number",
                  "type": "number",
                  "path": "discovery.Multicast",
                  "model": "multicastPort",
                  "max": 65535,
                  "placeholder": 47400,
                  "tip": [
                    "Port number which multicast messages are sent to"
                  ]
                },
                {
                  "label": "Waits for reply",
                  "type": "number",
                  "path": "discovery.Multicast",
                  "model": "responseWaitTime",
                  "placeholder": 500,
                  "tip": [
                    "Time in milliseconds IP finder waits for reply to multicast address request"
                  ]
                },
                {
                  "label": "Attempts count",
                  "type": "number",
                  "path": "discovery.Multicast",
                  "model": "addressRequestAttempts",
                  "placeholder": 2,
                  "tip": [
                    "Number of attempts to send multicast address request",
                    "IP finder re-sends request only in case if no reply for previous request is received"
                  ]
                },
                {
                  "label": "Local address",
                  "type": "text",
                  "path": "discovery.Multicast",
                  "model": "localAddress",
                  "tip": [
                    "Local host address used by this IP finder",
                    "If provided address is non-loopback then multicast socket is bound to this interface",
                    "If local address is not set or is any local address then IP finder creates multicast sockets for all found non-loopback addresses"
                  ]
                },
                {
                  "label": "Addresses",
                  "type": "table-simple",
                  "ui": "table-simple",
                  "path": "discovery.Multicast",
                  "model": "addresses",
                  "reordering": true,
                  "ipaddress": true,
                  "placeholder": "IP address:port",
                  "focusId": "IpAddress",
                  "addTip": "Add new address",
                  "removeTip": "Remove address",
                  "tableTip": [
                    "Addresses may be represented as follows:",
                    "<ul>",
                    "  <li>IP address (e.g. 127.0.0.1, 9.9.9.9, etc)</li>",
                    "  <li>IP address and port (e.g. 127.0.0.1:47500, 9.9.9.9:47501, etc)</li>",
                    "  <li>IP address and port range (e.g. 127.0.0.1:47500..47510, 9.9.9.9:47501..47504, etc)</li>",
                    "  <li>Hostname (e.g. host1.com, host2, etc)</li>",
                    "  <li>Hostname and port (e.g. host1.com:47500, host2:47502, etc)</li>",
                    "  <li>Hostname and port range (e.g. host1.com:47500..47510, host2:47502..47508, etc)</li>",
                    "</ul>",
                    "If port is 0 or not provided then default port will be used (depends on discovery SPI configuration)",
                    "If port range is provided (e.g. host:port1..port2) the following should be considered:",
                    "<ul>",
                    "  <li>port1 < port2 should be true</li>",
                    "  <li>Both port1 and port2 should be greater than 0</li>",
                    "</ul>"
                  ]
                }
              ]
            },
            "S3": {
              "fields": [
                {
                  "label": "Bucket name",
                  "type": "text",
                  "required": true,
                  "path": "discovery.S3",
                  "model": "bucketName",
                  "tip": [
                    "Bucket name for IP finder"
                  ]
                },
                {
                  "label": "Note, AWS credentials will be generated as stubs.",
                  "type": "label"
                }
              ]
            },
            "Cloud": {
              "fields": [
                {
                  "label": "Credential",
                  "type": "text",
                  "path": "discovery.Cloud",
                  "model": "credential",
                  "tip": [
                    "Credential that is used during authentication on the cloud",
                    "Depending on a cloud platform it can be a password or access key"
                  ]
                },
                {
                  "label": "Path to credential",
                  "type": "text",
                  "path": "discovery.Cloud",
                  "model": "credentialPath",
                  "tip": [
                    "Path to a credential that is used during authentication on the cloud",
                    "Access key or private key should be stored in a plain or PEM file without a passphrase"
                  ]
                },
                {
                  "label": "Identity",
                  "type": "text",
                  "required": true,
                  "path": "discovery.Cloud",
                  "model": "identity",
                  "tip": [
                    "Identity that is used as a user name during a connection to the cloud",
                    "Depending on a cloud platform it can be an email address, user name, etc"
                  ]
                },
                {
                  "label": "Provider",
                  "type": "text",
                  "required": true,
                  "path": "discovery.Cloud",
                  "model": "provider",
                  "tip": [
                    "Cloud provider to use"
                  ]
                },
                {
                  "label": "Regions",
                  "type": "table-simple",
                  "ui": "table-simple",
                  "path": "discovery.Cloud",
                  "model": "regions",
                  "placeholder": "Region name",
                  "focusId": "Region",
                  "addTip": "Add new region",
                  "removeTip": "Remove region",
                  "tableTip": [
                    "List of regions where VMs are located",
                    "If the regions are not set then every region, that a cloud provider has, will be investigated. This could lead to significant performance degradation",
                    "Note, that some cloud providers, like Google Compute Engine, doesn't have a notion of a region. For such providers regions are redundant"
                  ],
                  "tip": [
                    "Region where VMs are located"
                  ]
                },
                {
                  "label": "Zones",
                  "type": "table-simple",
                  "ui": "table-simple",
                  "path": "discovery.Cloud",
                  "model": "zones",
                  "placeholder": "Zone name",
                  "focusId": "Zone",
                  "addTip": "Add new zone",
                  "removeTip": "Remove zone",
                  "tableTip": [
                    "List of zones where VMs are located",
                    "If the zones are not set then every zone from specified regions, will be taken into account",
                    "Note, that some cloud providers, like Rackspace, doesn't have a notion of a zone. For such providers zones are redundant"
                  ],
                  "tip": [
                    "Zone where VMs are located"
                  ]
                }
              ]
            },
            "GoogleStorage": {
              "fields": [
                {
                  "label": "Project name",
                  "type": "text",
                  "required": true,
                  "path": "discovery.GoogleStorage",
                  "model": "projectName",
                  "tip": [
                    "Google Cloud Platforms project name",
                    "Usually this is an auto generated project number (ex. 208709979073) that can be found in 'Overview' section of Google Developer Console"
                  ]
                },
                {
                  "label": "Bucket name",
                  "type": "text",
                  "required": true,
                  "path": "discovery.GoogleStorage",
                  "model": "bucketName",
                  "tip": [
                    "Google Cloud Storage bucket name",
                    "If the bucket doesn't exist Ignite will automatically create it",
                    "However the name must be unique across whole Google Cloud Storage and Service Account Id must be authorized to perform this operation"
                  ]
                },
                {
                  "label": "Private key path",
                  "type": "text",
                  "required": true,
                  "path": "discovery.GoogleStorage",
                  "model": "serviceAccountP12FilePath",
                  "tip": [
                    "Full path to the private key in PKCS12 format of the Service Account"
                  ]
                },
                {
                  "label": "Account id",
                  "type": "text",
                  "required": true,
                  "path": "discovery.GoogleStorage",
                  "model": "serviceAccountId",
                  "tip": [
                    "Service account ID (typically an e-mail address)"
                  ]
                }
              ]
            },
            "Jdbc": {
              "fields": [
                {
                  "label": "DB schema should be initialized by Ignite",
                  "type": "check",
                  "path": "discovery.Jdbc",
                  "model": "initSchema",
                  "tip": [
                    "Flag indicating whether DB schema should be initialized by Ignite or was explicitly created by user"
                  ]
                }
              ]
            },
            "SharedFs": {
              "fields": [
                {
                  "label": "File path",
                  "type": "text",
                  "path": "discovery.SharedFs",
                  "model": "path",
                  "placeholder": "disco/tcp"
                }
              ]
            }
          }
        }
      ]
    }
  ]
}
