//-
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

- var model = 'backupItem.sslContextFactory'

form.panel.panel-default(bs-collapse ng-model='panel' name='sslConfiguration')
    .panel-heading(bs-collapse-toggle)
        i.fa(ng-class='panel === 0 ? "fa-chevron-circle-up" : "fa-chevron-circle-down"')
        label SSL configuration
        i.tipLabel.fa.fa-question-circle(bs-tooltip='"Settings for SSL configuration"')
        i.pull-right.fa.fa-undo(
            ng-show='!preview["sslConfiguration"].allDefaults' 
            ng-click='#{model} = {}; $event.stopPropagation()' 
            bs-tooltip 
            data-title='"Undo unsaved changes"')
    .panel-collapse(role='tabpanel' bs-collapse-target id='sslConfiguration')
        .panel-body
            .col-sm-6
                .settings-row
                    ignite-form-field.checkbox
                        ignite-form-field-input-checkbox(
                            data-id='sslEnabled'
                            data-name='sslEnabled'
                            data-ng-model='backupItem.sslEnabled'
                        )
                        | Enabled
                        ignite-form-field-tooltip
                            | Flag indicating whether to configure SSL configuration
                
                .settings-row(ng-if='backupItem.sslEnabled')
                    ignite-form-field(data-label='Algorithm to create a key manager')
                        ignite-form-field-tooltip
                            | Sets key manager algorithm that will be used to create a key manager,#[br]
                            | Notice that in most cased default value suites well, however, on Android platform this value need to be set to X509
                        ignite-form-field-input-datalist(
                            data-id='keyAlgorithm'
                            data-name='keyAlgorithm'
                            data-options="['SumX509', 'X509']"
                            data-ng-model='#{model}.keyAlgorithm'
                            data-placeholder='SumX509'
                        )

                .settings-row(ng-if='backupItem.sslEnabled')
                    ignite-form-field(data-label='Key store file')
                        ignite-form-field-tooltip
                            | Path to the key store file,#[br]
                            | This is a mandatory parameter since ssl context could not be initialized without key manager
                        ignite-form-field-input-text(
                            data-id='keyStoreFilePath'
                            data-name='keyStoreFilePath'
                            data-ng-model='#{model}.keyStoreFilePath'
                            data-placeholder='Path to the key store file'
                            data-ng-required='true'
                        )

                .settings-row(ng-if='backupItem.sslEnabled')
                    ignite-form-field(data-label='Key store type')
                        ignite-form-field-tooltip
                            | Key store type used in context initialization
                        ignite-form-field-input-datalist(
                            data-id='keyStoreType'
                            data-name='keyStoreType'
                            data-options="['JKS', 'PCKS11', 'PCKS12']"
                            data-ng-model='#{model}.keyStoreType'
                            data-placeholder='JKS'
                        )

                .settings-row(ng-if='backupItem.sslEnabled')
                    ignite-form-field(data-label='Protocol')
                        ignite-form-field-tooltip
                            | Protocol for secure transport
                        ignite-form-field-input-datalist(
                            data-id='protocol'
                            data-name='protocol'
                            data-options="['TSL', 'SSL']"
                            data-ng-model='#{model}.protocol'
                            data-placeholder='TSL'
                        )

                .settings-row(ng-if='backupItem.sslEnabled')
                    ignite-form-group(data-label='Trust managers')
                        ignite-form-group-tooltip
                            | Pre-configured trust managers
                        ignite-form-group-add
                            | Add new trust manager.
                        .group-content-empty(ng-if='!(#{model}.trustManagers.length)')
                            | Not defined
                        .group-content(ng-if='#{model}.trustManagers.length')
                            ignite-form-field(ng-repeat='model in #{model}.trustManagers track by $index' type='internal')
                                a.labelFormField  {{ $index+1 }}) {{ model }}
                                i.tipField.fa.fa-remove(
                                    bs-tooltip='"Remove trust manager"'
                                    ng-click='#{model}.trustManagers.splice(#{model}.trustManagers.indexOf(model), 1)'
                                )
                        .group-content(
                            ng-form='form' 
                        )
                            ignite-form-field(type='internal')
                                ignite-form-field-input-text(
                                    data-name='field'
                                    data-ng-model='field'
                                    data-placeholder='Enter fully qualified class name'
                                    data-java-keywords='true'
                                    data-java-package-specified='true'
                                    data-ng-required='true'
                                    on-enter='form.$valid && #{model}.trustManagers.push(field)'
                                )
                                    i.fa.fa-floppy-o(
                                        ng-show='form.$valid'
                                        ng-click='form.$valid && #{model}.trustManagers.push(field)'
                                        bs-tooltip 
                                        data-title='Click icon or press [Enter] to save item' 
                                    )
                                    i.fa.fa-exclamation-triangle.form-control-feedback(
                                        ng-show='!form.$pristine && form.field.$error.javaKeywords'
                                        bs-tooltip
                                        data-title='Trust manager could not contains reserved java keyword: ""!'
                                    )

                                    i.fa.fa-exclamation-triangle.form-control-feedback(
                                        ng-show='!form.$pristine && form.field.$error.javaPackageSpecified'
                                        bs-tooltip
                                        data-title='Trust manager does not have package specified!'
                                    )

                                    i.fa.fa-exclamation-triangle.form-control-feedback(
                                        ng-show='!form.$pristine && form.field.$error.required'
                                        bs-tooltip
                                        data-title='Trust manager could not be empty!'
                                    )

                //- data-ng-model-options='{ updateOn: "blur"}'
                                        data-java-class='true'
                                        
                                        data-java-identifier='true'                

                //- .settings-row
                    .col-sm-12.panel-details(ng-if='#{model}.expanded && #{model}.kind')
                        .details-row
                            ignite-form-field(data-label='Base directory')
                                ignite-form-field-tooltip
                                    | Base directory where to write files
                                ignite-form-field-input-text(
                                    data-id='baseDirectory'
                                    data-name='baseDirectory'
                                    data-ng-model='#{model}.FileSwapSpaceSpi.baseDirectory'
                                    data-placeholder='swapspace'
                                )
                        .details-row
                            ignite-form-field(data-label='Read stripe size')
                                ignite-form-field-tooltip
                                    | Read stripe size defines number of file channels to be used concurrently
                                ignite-form-field-input-number(
                                    data-id='readStripesNumber'
                                    data-name='readStripesNumber'
                                    data-ng-model='#{model}.FileSwapSpaceSpi.readStripesNumber'
                                    data-placeholder='available CPU cores'
                                )
                        .details-row
                            ignite-form-field(data-label='Maximum sparsity')
                                ignite-form-field-tooltip
                                    | This property defines maximum acceptable wasted file space to whole file size ratio#[br]
                                    | When this ratio becomes higher than specified number compacting thread starts working
                                ignite-form-field-input-number(
                                    data-id='maximumSparsity'
                                    data-name='maximumSparsity'
                                    data-ng-model='#{model}.FileSwapSpaceSpi.maximumSparsity'
                                    data-placeholder='0.5'
                                )
                        .details-row
                            ignite-form-field(data-label='Max write queue size')
                                ignite-form-field-tooltip
                                    | Max write queue size in bytes#[br]
                                    | If there are more values are waiting for being written to disk then specified size, SPI will block on store operation
                                ignite-form-field-input-number(
                                    data-id='maxWriteQueueSize'
                                    data-name='maxWriteQueueSize'
                                    data-ng-model='#{model}.FileSwapSpaceSpi.maxWriteQueueSize'
                                    data-placeholder='1024 * 1024'
                                )
                        .details-row
                            ignite-form-field(data-label='Write buffer size')
                                ignite-form-field-tooltip
                                    | Write buffer size in bytes#[br]
                                    | Write to disk occurs only when this buffer is full
                                ignite-form-field-input-number(
                                    data-id='writeBufferSize'
                                    data-name='writeBufferSize'
                                    data-ng-model='#{model}.FileSwapSpaceSpi.writeBufferSize'
                                    data-placeholder='Available CPU cores'
                                )


            .col-sm-6
                .preview-panel(ng-init='mode = false')
                    .preview-legend
                        a(ng-class='{active: !mode, inactive: mode}' ng-click='mode = false') XML
                        | &nbsp;
                        a(ng-class='{active: mode, inactive: !mode}' ng-click='mode = true') Java
                    .preview-content(
                        ng-if='!preview["sslConfiguration"].allDefaults && mode'
                        ui-ace='{onLoad: previewInit, onChange: previewChanged, mode: "java", rendererOptions: {minLines: group.previewMinLines || 3}}' 
                        ng-model='preview["sslConfiguration"].java')
                    .preview-content(
                        ng-if='!preview["sslConfiguration"].allDefaults && !mode'
                        ui-ace='{onLoad: previewInit, onChange: previewChanged, mode: "xml", rendererOptions: {minLines: group.previewMinLines || 3}}' 
                        ng-model='preview["sslConfiguration"].xml')
                    .preview-content-empty(ng-if='preview["sslConfiguration"].allDefaults')
                        label All Defaults